{
  "name": "wingman",
  "displayName": "Wingman: write and improve code using AI",
  "description": "Use Wingman right inside the IDE to enhance and automate your coding with AI-powered assistance (unofficial)",
  "version": "2.0.0",
  "icon": "resources/extensionIcon.png",
  "license": "MIT",
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "huggingface",
    "chatgpt",
    "copilot",
    "ai",
    "explain",
    "find bugs",
    "explain ",
    "refactor",
    "wingman"
  ],
  "activationEvents": [
    "onView:chatgpt.chatView",
    "onCommand:chatgpt.ask",
    "onCommand:chatgpt.explain",
    "onCommand:chatgpt.refactor",
    "onCommand:chatgpt.optimize",
    "onCommand:chatgpt.findProblems",
    "onCommand:chatgpt.documentation"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "chatgpt.explain",
        "title": "Wingman: Explain selection"
      },
      {
        "command": "chatgpt.refactor",
        "title": "Wingman: Refactor selection"
      },
      {
        "command": "chatgpt.findProblems",
        "title": "Wingman: Find problems"
      },
      {
        "command": "chatgpt.optimize",
        "title": "Wingman: Optimize selection"
      },
      {
        "command": "chatgpt.documentation",
        "title": "Wingman: Write documentation"
      },
      {
        "command": "chatgpt.resetConversation",
        "title": "Reset Wingman conversation"
      },
      {
        "command": "chatgpt.tryAgain",
        "title": "Retry Wingman request"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "chatgpt.explain",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@2"
        },
        {
          "command": "chatgpt.refactor",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@3"
        },
        {
          "command": "chatgpt.findProblems",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@4"
        },
        {
          "command": "chatgpt.optimize",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@5"
        },
        {
          "command": "chatgpt.documentation",
          "when": "editorHasSelection",
          "group": "chatgpt-menu-group@6"
        }
      ],
      "commandPalette": [
        {
          "command": "chatgpt.explain",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.refactor",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.findProblems",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.optimize",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.documentation",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt.resetConversation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chatgpt",
          "title": "Wingman",
          "icon": "resources/icon.png"
        }
      ]
    },
    "views": {
      "chatgpt": [
        {
          "type": "webview",
          "id": "chatgpt.chatView",
          "name": "Wingman"
        }
      ]
    },
    "configuration": {
      "title": "Wingman",
      "type": "object",
      "properties": {
        "wingman.apiKey": {
          "markdownDescription": "Some api key placeholder",
          "type": "string",
          "order": 0
        },
        "wingman.apiUrl.explain": {
          "markdownDescription": "Wingman Explain API URL. Defaults to [https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta](https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta)",
          "type": "string",
          "default": "https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta",
          "order": 1
        },
        "wingman.apiUrl.refactor": {
          "markdownDescription": "Wingman Refactor API URL. Defaults to [https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta](https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta)",
          "type": "string",
          "default": "https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta",
          "order": 2
        },
        "wingman.apiUrl.findProblems": {
          "markdownDescription": "Wingman Find Problems API URL. Defaults to [https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta](https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta)",
          "type": "string",
          "default": "https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta",
          "order": 3
        },
        "wingman.apiUrl.optimize": {
          "markdownDescription": "Wingman Optimize API URL. Defaults to [https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta](https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta)",
          "type": "string",
          "default": "https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta",
          "order": 4
        },
        "wingman.apiUrl.documentation": {
          "markdownDescription": "Wingman Documentation API URL. Defaults to [https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta](https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta)",
          "type": "string",
          "default": "https://api-inference.huggingface.co/models/HuggingFaceH4/starchat-beta",
          "order": 5
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "node ./node_modules/webpack-dev-server/bin/webpack-dev-server.js --config webpack.config.js --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "update-package-lock": "npm install --package-lock-only",
    "watching": "webpack --config webpack.config.js --watch"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.5",
    "webpack": "^5.87.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1"
  },
  "dependencies": {
    "@huggingface/inference": "^2.5.2",
    "axios": "^1.4.0"
  }
}
